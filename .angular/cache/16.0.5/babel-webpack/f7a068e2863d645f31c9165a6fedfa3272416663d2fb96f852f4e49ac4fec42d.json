{"ast":null,"code":"//import { decrement, increme } from \"src/app/state/actions/actions\";\nimport { DECREMENT, INCREMENT } from \"src/app/state/actions/actions\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"@angular/common\";\nexport class DemoCounter {\n  increment() {\n    this.store.dispatch({\n      type: INCREMENT\n    });\n  }\n  decrement() {\n    this.store.dispatch({\n      type: DECREMENT\n    });\n  }\n  constructor(store) {\n    this.store = store;\n    // count$: Observable<number>;\n    // constructor(private store: Store<{ count: number }>) {\n    //   this.count$ = store.select('count');\n    // }\n    // increment() {\n    //   this.store.dispatch(increment());\n    // }\n    // decrement() {\n    //   this.store.dispatch(decrement());\n    // }\n    // reset() {\n    //   this.store.dispatch(reset());\n    // }\n    this.data = '';\n    console.log(store);\n    store.select('mainStoreReducer').subscribe(data => {\n      this.data = 'Counter value is ' + data.counter;\n    });\n  }\n  static #_ = this.ɵfac = function DemoCounter_Factory(t) {\n    return new (t || DemoCounter)(i0.ɵɵdirectiveInject(i1.Store));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DemoCounter,\n    selectors: [[\"app-demoCounter\"]],\n    decls: 9,\n    vars: 3,\n    consts: [[3, \"click\"]],\n    template: function DemoCounter_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"button\", 0);\n        i0.ɵɵlistener(\"click\", function DemoCounter_Template_button_click_0_listener() {\n          return ctx.increment();\n        });\n        i0.ɵɵtext(1, \"Increment\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\");\n        i0.ɵɵtext(3);\n        i0.ɵɵpipe(4, \"async\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"button\", 0);\n        i0.ɵɵlistener(\"click\", function DemoCounter_Template_button_click_5_listener() {\n          return ctx.decrement();\n        });\n        i0.ɵɵtext(6, \"Decrement\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"button\", 0);\n        i0.ɵɵlistener(\"click\", function DemoCounter_Template_button_click_7_listener() {\n          return ctx.reset();\n        });\n        i0.ɵɵtext(8, \"Reset Counter\");\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\"Current Count: \", i0.ɵɵpipeBind1(4, 1, ctx.count$), \"\");\n      }\n    },\n    dependencies: [i2.AsyncPipe],\n    encapsulation: 2\n  });\n}","map":{"version":3,"names":["DECREMENT","INCREMENT","DemoCounter","increment","store","dispatch","type","decrement","constructor","data","console","log","select","subscribe","counter","_","i0","ɵɵdirectiveInject","i1","Store","_2","selectors","decls","vars","consts","template","DemoCounter_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","DemoCounter_Template_button_click_0_listener","ɵɵtext","ɵɵelementEnd","DemoCounter_Template_button_click_5_listener","DemoCounter_Template_button_click_7_listener","reset","ɵɵadvance","ɵɵtextInterpolate1","ɵɵpipeBind1","count$"],"sources":["/home/kumar007ambi/state_management_app/src/demoCounter/demoCounter.component.ts","/home/kumar007ambi/state_management_app/src/demoCounter/demoCounter.component.html"],"sourcesContent":["import { Component } from \"@angular/core\";\nimport { State, Store } from \"@ngrx/store\";\nimport { Observable } from \"rxjs/internal/Observable\";\n//import { decrement, increme } from \"src/app/state/actions/actions\";\nimport { DECREMENT, INCREMENT } from \"src/app/state/actions/actions\";\n\n@Component({\n    selector:'app-demoCounter',\n    templateUrl:'./demoCounter.component.html',\n})\n\nexport class DemoCounter{\n    // count$: Observable<number>;\n\n    // constructor(private store: Store<{ count: number }>) {\n    //   this.count$ = store.select('count');\n    // }\n  \n    // increment() {\n    //   this.store.dispatch(increment());\n    // }\n  \n    // decrement() {\n    //   this.store.dispatch(decrement());\n    // }\n  \n    // reset() {\n    //   this.store.dispatch(reset());\n    // }\n    data = '';\n    increment(){\n      this.store.dispatch({type: INCREMENT});\n    }\n    decrement(){\n      this.store.dispatch({type: DECREMENT});\n    }\n    constructor (private store:Store<State>){\n      console.log(store);\n      store.select('mainStoreReducer')\n        .subscribe( (data:State ) => {\n          this.data = 'Counter value is ' + data.counter;\n        });\n    }\n}","<button (click)=\"increment()\">Increment</button>\n\n<div>Current Count: {{ count$ | async }}</div>\n\n<button (click)=\"decrement()\">Decrement</button>\n\n<button (click)=\"reset()\">Reset Counter</button>"],"mappings":"AAGA;AACA,SAASA,SAAS,EAAEC,SAAS,QAAQ,+BAA+B;;;;AAOpE,OAAM,MAAOC,WAAW;EAmBpBC,SAASA,CAAA;IACP,IAAI,CAACC,KAAK,CAACC,QAAQ,CAAC;MAACC,IAAI,EAAEL;IAAS,CAAC,CAAC;EACxC;EACAM,SAASA,CAAA;IACP,IAAI,CAACH,KAAK,CAACC,QAAQ,CAAC;MAACC,IAAI,EAAEN;IAAS,CAAC,CAAC;EACxC;EACAQ,YAAqBJ,KAAkB;IAAlB,KAAAA,KAAK,GAALA,KAAK;IAxB1B;IAEA;IACA;IACA;IAEA;IACA;IACA;IAEA;IACA;IACA;IAEA;IACA;IACA;IACA,KAAAK,IAAI,GAAG,EAAE;IAQPC,OAAO,CAACC,GAAG,CAACP,KAAK,CAAC;IAClBA,KAAK,CAACQ,MAAM,CAAC,kBAAkB,CAAC,CAC7BC,SAAS,CAAGJ,IAAU,IAAK;MAC1B,IAAI,CAACA,IAAI,GAAG,mBAAmB,GAAGA,IAAI,CAACK,OAAO;IAChD,CAAC,CAAC;EACN;EAAC,QAAAC,CAAA,G;qBA/BQb,WAAW,EAAAc,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,KAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAXlB,WAAW;IAAAmB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,qBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCXxBX,EAAA,CAAAa,cAAA,gBAA8B;QAAtBb,EAAA,CAAAc,UAAA,mBAAAC,6CAAA;UAAA,OAASH,GAAA,CAAAzB,SAAA,EAAW;QAAA,EAAC;QAACa,EAAA,CAAAgB,MAAA,gBAAS;QAAAhB,EAAA,CAAAiB,YAAA,EAAS;QAEhDjB,EAAA,CAAAa,cAAA,UAAK;QAAAb,EAAA,CAAAgB,MAAA,GAAmC;;QAAAhB,EAAA,CAAAiB,YAAA,EAAM;QAE9CjB,EAAA,CAAAa,cAAA,gBAA8B;QAAtBb,EAAA,CAAAc,UAAA,mBAAAI,6CAAA;UAAA,OAASN,GAAA,CAAArB,SAAA,EAAW;QAAA,EAAC;QAACS,EAAA,CAAAgB,MAAA,gBAAS;QAAAhB,EAAA,CAAAiB,YAAA,EAAS;QAEhDjB,EAAA,CAAAa,cAAA,gBAA0B;QAAlBb,EAAA,CAAAc,UAAA,mBAAAK,6CAAA;UAAA,OAASP,GAAA,CAAAQ,KAAA,EAAO;QAAA,EAAC;QAACpB,EAAA,CAAAgB,MAAA,oBAAa;QAAAhB,EAAA,CAAAiB,YAAA,EAAS;;;QAJ3CjB,EAAA,CAAAqB,SAAA,GAAmC;QAAnCrB,EAAA,CAAAsB,kBAAA,oBAAAtB,EAAA,CAAAuB,WAAA,OAAAX,GAAA,CAAAY,MAAA,MAAmC"},"metadata":{},"sourceType":"module","externalDependencies":[]}